// <auto-generated />
using System;
using Chef.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chef.DAL.Migrations
{
    [DbContext(typeof(ChefContext))]
    [Migration("20211119141126_AddRecipeComponents")]
    partial class AddRecipeComponents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chef.DAL.Entities.ComponentIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RecipeComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("VolumeMetricId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeComponentId");

                    b.HasIndex("VolumeMetricId");

                    b.ToTable("ComponentIngredients");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientCategoryId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientCategoryId = 1,
                            Name = "Bread"
                        },
                        new
                        {
                            Id = 2,
                            IngredientCategoryId = 1,
                            Name = "Crescent rolls"
                        },
                        new
                        {
                            Id = 3,
                            IngredientCategoryId = 2,
                            Name = "Butter"
                        },
                        new
                        {
                            Id = 4,
                            IngredientCategoryId = 2,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 5,
                            IngredientCategoryId = 2,
                            Name = "Egg substitute"
                        },
                        new
                        {
                            Id = 6,
                            IngredientCategoryId = 2,
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = 7,
                            IngredientCategoryId = 2,
                            Name = "Milk"
                        },
                        new
                        {
                            Id = 8,
                            IngredientCategoryId = 2,
                            Name = "Yogurt"
                        },
                        new
                        {
                            Id = 9,
                            IngredientCategoryId = 2,
                            Name = "Mozzarella cheese"
                        },
                        new
                        {
                            Id = 10,
                            IngredientCategoryId = 2,
                            Name = "Parmesan cheese"
                        },
                        new
                        {
                            Id = 11,
                            IngredientCategoryId = 2,
                            Name = "Goat cheese"
                        },
                        new
                        {
                            Id = 12,
                            IngredientCategoryId = 3,
                            Name = "Avocado"
                        },
                        new
                        {
                            Id = 13,
                            IngredientCategoryId = 3,
                            Name = "Banana"
                        },
                        new
                        {
                            Id = 14,
                            IngredientCategoryId = 3,
                            Name = "Broccoli"
                        },
                        new
                        {
                            Id = 15,
                            IngredientCategoryId = 3,
                            Name = "Carrot"
                        },
                        new
                        {
                            Id = 16,
                            IngredientCategoryId = 3,
                            Name = "Celery"
                        },
                        new
                        {
                            Id = 17,
                            IngredientCategoryId = 3,
                            Name = "Cucumber"
                        },
                        new
                        {
                            Id = 18,
                            IngredientCategoryId = 3,
                            Name = "Eggplant"
                        },
                        new
                        {
                            Id = 19,
                            IngredientCategoryId = 3,
                            Name = "Garlic"
                        },
                        new
                        {
                            Id = 20,
                            IngredientCategoryId = 3,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = 21,
                            IngredientCategoryId = 3,
                            Name = "Onions"
                        },
                        new
                        {
                            Id = 22,
                            IngredientCategoryId = 3,
                            Name = "Potato"
                        },
                        new
                        {
                            Id = 23,
                            IngredientCategoryId = 3,
                            Name = "Salad"
                        },
                        new
                        {
                            Id = 24,
                            IngredientCategoryId = 3,
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = 25,
                            IngredientCategoryId = 3,
                            Name = "Cranberry"
                        },
                        new
                        {
                            Id = 26,
                            IngredientCategoryId = 3,
                            Name = "Strawberry"
                        },
                        new
                        {
                            Id = 27,
                            IngredientCategoryId = 3,
                            Name = "Cherry"
                        },
                        new
                        {
                            Id = 28,
                            IngredientCategoryId = 3,
                            Name = "Raspberry"
                        },
                        new
                        {
                            Id = 29,
                            IngredientCategoryId = 4,
                            Name = "Chicken"
                        },
                        new
                        {
                            Id = 30,
                            IngredientCategoryId = 4,
                            Name = "Chicken breast"
                        },
                        new
                        {
                            Id = 31,
                            IngredientCategoryId = 4,
                            Name = "Lamb"
                        },
                        new
                        {
                            Id = 32,
                            IngredientCategoryId = 4,
                            Name = "Rabbit"
                        },
                        new
                        {
                            Id = 33,
                            IngredientCategoryId = 4,
                            Name = "Ground beef"
                        },
                        new
                        {
                            Id = 34,
                            IngredientCategoryId = 4,
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = 35,
                            IngredientCategoryId = 6,
                            Name = "Dark chocolate"
                        },
                        new
                        {
                            Id = 36,
                            IngredientCategoryId = 6,
                            Name = "Wafers"
                        },
                        new
                        {
                            Id = 37,
                            IngredientCategoryId = 7,
                            Name = "Sugar"
                        },
                        new
                        {
                            Id = 38,
                            IngredientCategoryId = 7,
                            Name = "Dark brown sugar"
                        },
                        new
                        {
                            Id = 39,
                            IngredientCategoryId = 7,
                            Name = "Flour"
                        },
                        new
                        {
                            Id = 40,
                            IngredientCategoryId = 7,
                            Name = "Sunflower seeds"
                        },
                        new
                        {
                            Id = 41,
                            IngredientCategoryId = 8,
                            Name = "Saffron"
                        },
                        new
                        {
                            Id = 42,
                            IngredientCategoryId = 8,
                            Name = "Sage dry"
                        },
                        new
                        {
                            Id = 43,
                            IngredientCategoryId = 8,
                            Name = "Pepper"
                        },
                        new
                        {
                            Id = 44,
                            IngredientCategoryId = 8,
                            Name = "Salt"
                        },
                        new
                        {
                            Id = 45,
                            IngredientCategoryId = 9,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 46,
                            IngredientCategoryId = 10,
                            Name = "Spaghetti sauce"
                        },
                        new
                        {
                            Id = 47,
                            IngredientCategoryId = 10,
                            Name = "Mayonnaise"
                        },
                        new
                        {
                            Id = 48,
                            IngredientCategoryId = 10,
                            Name = "Olive oil"
                        },
                        new
                        {
                            Id = 49,
                            IngredientCategoryId = 12,
                            Name = "Spaghetti"
                        },
                        new
                        {
                            Id = 50,
                            IngredientCategoryId = 12,
                            Name = "Basmati rice"
                        });
                });

            modelBuilder.Entity("Chef.DAL.Entities.IngredientCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("IngredientCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bread and bakery"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dairy and eggs"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fruits and vegetables"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Meats and seafood"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Health and beauty"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Baking"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Herbs and spices"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Condiments"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Pasta, rice and beans"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Chef.DAL.Entities.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Blend the oats until they become a smooth flour texture. Set aside in a bowl",
                            OrderNumber = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Blend together bananas and milk",
                            OrderNumber = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Slowly add the oat flour and cinnamon to the bananas and milk. Blend until smooth",
                            OrderNumber = 3,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "On medium heat, pour mixture into a buttered pan. Once bubbles start to appear on one side, flip the pancakes",
                            OrderNumber = 4,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Add peanut butter, honey, syrup, chocolate chips, blueberries or whatever your heart desires!",
                            OrderNumber = 5,
                            RecipeId = 1
                        });
                });

            modelBuilder.Entity("Chef.DAL.Entities.ProductList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ProductLists");
                });

            modelBuilder.Entity("Chef.DAL.Entities.ProductListIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("ProductListId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("VolumeMetricId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ProductListId");

                    b.HasIndex("VolumeMetricId");

                    b.ToTable("ProductListIngredients");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("CookingTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefaultServingsCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("int");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<TimeSpan?>("PreparationTime")
                        .HasColumnType("time");

                    b.Property<string>("RecipeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookingTime = new TimeSpan(0, 0, 15, 0, 0),
                            CreatedAt = new DateTime(2021, 11, 19, 14, 11, 26, 471, DateTimeKind.Utc).AddTicks(7872),
                            DefaultServingsCount = 2,
                            DislikeCount = 1,
                            LikeCount = 21,
                            Name = "Banana Pancakes",
                            PreparationTime = new TimeSpan(0, 0, 5, 0, 0),
                            RecipeUrl = "https://www.runningwithspoons.com/wp-content/uploads/2020/05/Easy-Banana-Oat-Pancakes2-683x900.jpg"
                        });
                });

            modelBuilder.Entity("Chef.DAL.Entities.RecipeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("RecipeCategories");
                });

            modelBuilder.Entity("Chef.DAL.Entities.RecipeComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeComponents");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAlreadyCooked")
                        .HasColumnType("bit");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Chef.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ProductListId")
                        .HasColumnType("int");

                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProductListId");

                    b.HasIndex("UId")
                        .IsUnique()
                        .HasFilter("[UId] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Chef.DAL.Entities.VolumeMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("VolumeMetrics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "tsp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "tbsp"
                        },
                        new
                        {
                            Id = 3,
                            Name = "g"
                        },
                        new
                        {
                            Id = 4,
                            Name = "kg"
                        },
                        new
                        {
                            Id = 5,
                            Name = "l"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ml"
                        },
                        new
                        {
                            Id = 7,
                            Name = "cup"
                        },
                        new
                        {
                            Id = 8,
                            Name = "sprigs"
                        },
                        new
                        {
                            Id = 9,
                            Name = "head"
                        },
                        new
                        {
                            Id = 10,
                            Name = "glass"
                        });
                });

            modelBuilder.Entity("Chef.DAL.Entities.ComponentIngredient", b =>
                {
                    b.HasOne("Chef.DAL.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chef.DAL.Entities.RecipeComponent", "RecipeComponent")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chef.DAL.Entities.VolumeMetric", "VolumeMetric")
                        .WithMany()
                        .HasForeignKey("VolumeMetricId");

                    b.Navigation("Ingredient");

                    b.Navigation("RecipeComponent");

                    b.Navigation("VolumeMetric");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Ingredient", b =>
                {
                    b.HasOne("Chef.DAL.Entities.IngredientCategory", "Category")
                        .WithMany()
                        .HasForeignKey("IngredientCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Instruction", b =>
                {
                    b.HasOne("Chef.DAL.Entities.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Chef.DAL.Entities.ProductListIngredient", b =>
                {
                    b.HasOne("Chef.DAL.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chef.DAL.Entities.ProductList", "ProductList")
                        .WithMany("Ingredients")
                        .HasForeignKey("ProductListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chef.DAL.Entities.VolumeMetric", "VolumeMetric")
                        .WithMany()
                        .HasForeignKey("VolumeMetricId");

                    b.Navigation("Ingredient");

                    b.Navigation("ProductList");

                    b.Navigation("VolumeMetric");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Recipe", b =>
                {
                    b.HasOne("Chef.DAL.Entities.RecipeCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Chef.DAL.Entities.User", null)
                        .WithMany("SavedRecipes")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Chef.DAL.Entities.RecipeComponent", b =>
                {
                    b.HasOne("Chef.DAL.Entities.Recipe", "Recipe")
                        .WithMany("Components")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Review", b =>
                {
                    b.HasOne("Chef.DAL.Entities.Recipe", "Recipe")
                        .WithMany("Reviews")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chef.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chef.DAL.Entities.User", b =>
                {
                    b.HasOne("Chef.DAL.Entities.ProductList", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Chef.DAL.Entities.ProductList", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Chef.DAL.Entities.Recipe", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Instructions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Chef.DAL.Entities.RecipeComponent", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Chef.DAL.Entities.User", b =>
                {
                    b.Navigation("SavedRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
